{"ast":null,"code":"var _jsxFileName = \"E:\\\\Olympcepy\\\\pro\\\\src\\\\MainPage.js\";\nimport React from \"react\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport WallpaperIcon from \"@material-ui/icons/Wallpaper\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport OlympcepyContent from \"./OlympcepyContent\";\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPanelSwitch = open => event => {\n      if (open === null) {\n        open = !this.state.open;\n      }\n\n      if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      this.setState(state => {\n        state.open = open;\n        return state;\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n        position: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        onClick: this.onPanelSwitch(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MenuIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Olympcepy\"))), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n        open: this.state.open,\n        onOpen: this.onPanelSwitch(true),\n        onClose: this.onPanelSwitch(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PageMenu, {\n        page: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(OlympcepyPath, {\n        currentPage: this.state.currentPage,\n        page: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(OlympcepyContent, {\n        currentPage: this.state.currentPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.state = {\n      open: false,\n      currentPage: 4\n    };\n  }\n\n}\n\nclass OlympcepyPath extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(Breadcrumbs, {\n        style: {\n          padding: 20\n        },\n        \"aria-label\": \"breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Olympcepy\"), /*#__PURE__*/React.createElement(Typography, {\n        style: {\n          cursor: 'default'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, [\"Сообщения в чатах группы\", \"Пост на стене группы\", \"Формат сигналов\", \"Дополнительно\", \"\"][this.props.currentPage]));\n    };\n  }\n\n}\n\nclass PageMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.openMessages = () => {\n      this.props.page.setState(state => {\n        state.open = false;\n        state.currentPage = 0;\n        return state;\n      });\n    };\n\n    this.openPosts = () => {\n      this.props.page.setState(state => {\n        state.open = false;\n        state.currentPage = 1;\n        return state;\n      });\n    };\n\n    this.openFormat = () => {\n      this.props.page.setState(state => {\n        state.open = false;\n        state.currentPage = 2;\n        return state;\n      });\n    };\n\n    this.openAccount = () => {\n      this.props.page.setState(state => {\n        state.open = false;\n        state.currentPage = 3;\n        return state;\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n        style: {\n          marginTop: -8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        style: {\n          padding: 16,\n          paddingLeft: 25,\n          background: \"#3f51b5\",\n          color: \"white\"\n        },\n        button: true,\n        key: \"Меню настроек\",\n        onClick: this.props.page.onPanelSwitch(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        style: {\n          marginLeft: -20\n        },\n        primary: \"Меню настроек\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u0441\\u0438\\u0433\\u043D\\u0430\\u043B\\u043E\\u0432 \\u0432 \\u0412\\u041A\"), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        onClick: this.openMessages,\n        key: \"Сообщения в чатах группы\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: \"Сообщения в чатах группы\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        onClick: this.openPosts,\n        key: \"Пост на стене группы\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(WallpaperIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: \"Пост на стене группы\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, \"\\u0414\\u0440\\u0443\\u0433\\u0438\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        onClick: this.openFormat,\n        key: \"Формат сигналов\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: \"Формат сигналов\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        onClick: this.openAccount,\n        key: \"Дополнительно\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(AccountBoxIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: \"Дополнительно\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }))));\n    };\n  }\n\n}\n\nexport default Page;","map":{"version":3,"sources":["E:/Olympcepy/pro/src/MainPage.js"],"names":["React","SwipeableDrawer","List","Divider","ListItem","ListItemIcon","ListItemText","EmailIcon","WallpaperIcon","AccountBoxIcon","RadioButtonCheckedIcon","AppBar","Toolbar","Typography","IconButton","MenuIcon","ArrowBackIcon","Breadcrumbs","Link","OlympcepyContent","Page","Component","constructor","props","onPanelSwitch","open","event","state","type","key","setState","render","currentPage","OlympcepyPath","padding","cursor","PageMenu","openMessages","page","openPosts","openFormat","openAccount","marginTop","paddingLeft","background","color","marginLeft","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport WallpaperIcon from \"@material-ui/icons/Wallpaper\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport OlympcepyContent from \"./OlympcepyContent\";\r\n\r\nclass Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: false, currentPage: 4 };\r\n    }\r\n\r\n    onPanelSwitch = (open) => (event) => {\r\n        if (open === null) {\r\n            open = !this.state.open;\r\n        }\r\n        if (\r\n            event &&\r\n            event.type === \"keydown\" &&\r\n            (event.key === \"Tab\" || event.key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n        this.setState((state) => {\r\n            state.open = open;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            onClick={this.onPanelSwitch(true)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\">Olympcepy</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <SwipeableDrawer\r\n                    open={this.state.open}\r\n                    onOpen={this.onPanelSwitch(true)}\r\n                    onClose={this.onPanelSwitch(false)}\r\n                >\r\n                    <PageMenu page={this} />\r\n                </SwipeableDrawer>\r\n                <OlympcepyPath\r\n                    currentPage={this.state.currentPage}\r\n                    page={this}\r\n                />\r\n                <OlympcepyContent currentPage={this.state.currentPage} />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nclass OlympcepyPath extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Breadcrumbs style={{padding: 20}} aria-label=\"breadcrumb\">\r\n                <Link style={{cursor: 'pointer'}}>Olympcepy</Link>\r\n                <Typography style={{cursor: 'default'}}>\r\n                    {\r\n                        [\r\n                            \"Сообщения в чатах группы\",\r\n                            \"Пост на стене группы\",\r\n                            \"Формат сигналов\",\r\n                            \"Дополнительно\",\r\n                            \"\",\r\n                        ][this.props.currentPage]\r\n                    }\r\n                </Typography>\r\n            </Breadcrumbs>\r\n        );\r\n    };\r\n}\r\n\r\nclass PageMenu extends React.Component {\r\n    openMessages = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 0;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    openPosts = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 1;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    openFormat = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 2;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    openAccount = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 3;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <List style={{ marginTop: -8 }}>\r\n                    <ListItem\r\n                        style={{\r\n                            padding: 16,\r\n                            paddingLeft: 25,\r\n                            background: \"#3f51b5\",\r\n                            color: \"white\",\r\n                        }}\r\n                        button\r\n                        key={\"Меню настроек\"}\r\n                        onClick={this.props.page.onPanelSwitch(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ArrowBackIcon style={{ color: \"white\" }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            style={{ marginLeft: -20 }}\r\n                            primary={\"Меню настроек\"}\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <label style={{ textAlign: \"center\" }}>\r\n                    Отправка сигналов в ВК\r\n                </label>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openMessages}\r\n                        key={\"Сообщения в чатах группы\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <EmailIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Сообщения в чатах группы\"} />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openPosts}\r\n                        key={\"Пост на стене группы\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <WallpaperIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Пост на стене группы\"} />\r\n                    </ListItem>\r\n                </List>\r\n\r\n                <Divider />\r\n                <label style={{ textAlign: \"center\" }}>Другие настройки</label>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openFormat}\r\n                        key={\"Формат сигналов\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <RadioButtonCheckedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Формат сигналов\"} />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openAccount}\r\n                        key={\"Дополнительно\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <AccountBoxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Дополнительно\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}