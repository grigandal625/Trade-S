{"ast":null,"code":"import _classCallCheck from\"E:\\\\Olympcepy\\\\settings\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";/*global chrome*/var API=function API(){_classCallCheck(this,API);};API.recieved=function(callback){return function(event){try{callback(JSON.parse(event.currentTarget.responseText));}catch(e){}};};API.getUserById=function(id,callback){var xhr=new XMLHttpRequest();xhr.open(\"POST\",\"https://trades.pythonanywhere.com/api\");var obj={method:\"user\",data:{id:id}};xhr.onload=API.recieved(callback);xhr.send(JSON.stringify(obj));};API.getUserByKey=function(key,callback){var xhr=new XMLHttpRequest();xhr.open(\"POST\",\"https://trades.pythonanywhere.com/api\");var obj={method:\"user\",data:{key:key}};xhr.onload=API.recieved(callback);xhr.send(JSON.stringify(obj));};API.setUserSetts=function(id,setts,callback){var xhr=new XMLHttpRequest();xhr.open(\"POST\",\"https://trades.pythonanywhere.com/api\");var obj={method:\"setts\",data:{id:id,setts:setts}};xhr.onload=API.recieved(callback);xhr.send(JSON.stringify(obj));};API.setUserSettsByKey=function(key,setts,callback){API.getUserByKey(key,function(resp){API.setUserSetts(resp.id,setts,callback);});};API.uploadMySetts=function(callback){var cb=callback;chrome.storage.local.get([\"settsData\",\"userId\"],function(res){var r=res;if(r.userId&&r.settsData){var setts={accessToken:r.settsData.accessToken?r.settsData.accessToken:undefined,messages:r.settsData.messages?r.settsData.messages.map(function(e){return{groupToken:e.groupToken?e.groupToken:undefined};}):undefined};API.setUserSetts(r.userId,setts,cb);}});};API.downloadMySetts=function(callback){var cb=callback;var self=API;chrome.storage.local.get([\"settsData\",\"userId\"],function(res){var r=res;if(r.userId){API.getUserById(r.userId,function(user){var setts=r.settsData;setts.messages=user.setts.messages;setts.accessToken=user.setts.accessToken;chrome.storage.local.set({settsData:setts},function(){try{cb(setts);}catch(e){}});});}});};export default API;","map":{"version":3,"sources":["E:/Olympcepy/settings/src/API.js"],"names":["API","recieved","callback","event","JSON","parse","currentTarget","responseText","e","getUserById","id","xhr","XMLHttpRequest","open","obj","method","data","onload","send","stringify","getUserByKey","key","setUserSetts","setts","setUserSettsByKey","resp","uploadMySetts","cb","chrome","storage","local","get","res","r","userId","settsData","accessToken","undefined","messages","map","groupToken","downloadMySetts","self","user","set"],"mappings":"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","sourcesContent":["/*global chrome*/\r\n\r\nclass API {\r\n    static recieved = (callback) => (event) => {\r\n        try {\r\n            callback(JSON.parse(event.currentTarget.responseText));\r\n        } catch (e) {}\r\n    };\r\n\r\n    static getUserById = (id, callback) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", \"https://trades.pythonanywhere.com/api\");\r\n        var obj = {\r\n            method: \"user\",\r\n            data: { id: id },\r\n        };\r\n        xhr.onload = API.recieved(callback);\r\n        xhr.send(JSON.stringify(obj));\r\n    };\r\n\r\n    static getUserByKey = (key, callback) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", \"https://trades.pythonanywhere.com/api\");\r\n        var obj = {\r\n            method: \"user\",\r\n            data: { key: key },\r\n        };\r\n        xhr.onload = API.recieved(callback);\r\n        xhr.send(JSON.stringify(obj));\r\n    };\r\n\r\n    static setUserSetts = (id, setts, callback) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", \"https://trades.pythonanywhere.com/api\");\r\n        var obj = {\r\n            method: \"setts\",\r\n            data: { id: id, setts: setts },\r\n        };\r\n        xhr.onload = API.recieved(callback);\r\n        xhr.send(JSON.stringify(obj));\r\n    };\r\n\r\n    static setUserSettsByKey = (key, setts, callback) => {\r\n        API.getUserByKey(key, (resp) => {\r\n            API.setUserSetts(resp.id, setts, callback);\r\n        });\r\n    };\r\n\r\n    static uploadMySetts = (callback) => {\r\n        var cb = callback\r\n        chrome.storage.local.get([\"settsData\", \"userId\"], (res) => {\r\n            var r = res;\r\n            if (r.userId && r.settsData) {\r\n                var setts = {\r\n                    accessToken: r.settsData.accessToken\r\n                        ? r.settsData.accessToken\r\n                        : undefined,\r\n                    messages: r.settsData.messages\r\n                        ? r.settsData.messages.map((e) => {\r\n                              return {\r\n                                  groupToken: e.groupToken\r\n                                      ? e.groupToken\r\n                                      : undefined,\r\n                              };\r\n                          })\r\n                        : undefined,\r\n                };\r\n                API.setUserSetts(r.userId, setts, cb);\r\n            }\r\n        });\r\n    };\r\n\r\n    static downloadMySetts = (callback) => {\r\n        var cb = callback;\r\n        var self = this;\r\n        chrome.storage.local.get([\"settsData\", \"userId\"], (res) => {\r\n            var r = res;\r\n            if (r.userId) {\r\n                API.getUserById(r.userId, (user) => {\r\n                    var setts = r.settsData;\r\n                    setts.messages = user.setts.messages;\r\n                    setts.accessToken = user.setts.accessToken;\r\n                    chrome.storage.local.set({ settsData: setts }, () => {\r\n                        try {\r\n                            cb(setts);\r\n                        } catch (e) {}\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport default API;\r\n"]},"metadata":{},"sourceType":"module"}