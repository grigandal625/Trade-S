{"ast":null,"code":"import _assertThisInitialized from\"E:\\\\Olympcepy\\\\settings\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"E:\\\\Olympcepy\\\\settings\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _inherits from\"E:\\\\Olympcepy\\\\settings\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\Olympcepy\\\\settings\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";/*global chrome*/import Button from\"@material-ui/core/Button\";import CircularProgress from\"@material-ui/core/CircularProgress\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogContentText from\"@material-ui/core/DialogContentText\";import DialogTitle from\"@material-ui/core/DialogTitle\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import ListItemIcon from\"@material-ui/core/ListItemIcon\";import ListItemText from\"@material-ui/core/ListItemText\";import Paper from\"@material-ui/core/Paper\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableContainer from\"@material-ui/core/TableContainer\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import TextField from\"@material-ui/core/TextField\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import RefreshIcon from\"@material-ui/icons/Refresh\";import React from\"react\";import VKMethods from\"./VKMethods\";import Switch from\"@material-ui/core/Switch\";var APIKeyDialog=/*#__PURE__*/function(_React$Component){_inherits(APIKeyDialog,_React$Component);var _super=_createSuper(APIKeyDialog);function APIKeyDialog(props){var _this;_classCallCheck(this,APIKeyDialog);_this=_super.call(this,props);_this.onOk=function(){_this.props.onOk(_this.state.key);};_this.onCancel=function(){_this.props.onCancel();};_this.keyChanged=function(event){if(event.currentTarget){var newKey=event.currentTarget.value;_this.setState(function(state){state.key=newKey;return state;});}};_this.render=function(){return/*#__PURE__*/React.createElement(Dialog,{open:_this.props.open,onClose:_this.switchDialog,\"aria-labelledby\":\"form-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,null,\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 API-\\u043A\\u043B\\u044E\\u0447 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,null,\"\\u0414\\u043B\\u044F \\u043E\\u0431\\u0435\\u0441\\u043F\\u0435\\u0447\\u0435\\u043D\\u0438\\u044F \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0438 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u0432 \\u0447\\u0430\\u0442\\u044B \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C API-\\u043A\\u043B\\u044E\\u0447 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B.\"),/*#__PURE__*/React.createElement(TextField,{autoFocus:true,margin:\"dense\",label:\"API-\\u043A\\u043B\\u044E\\u0447 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\",fullWidth:true,onChange:_this.keyChanged})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:_this.onCancel,color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:_this.onOk,color:\"primary\"},\"Ok\")));};_this.state={key:\"\"};return _this;}return APIKeyDialog;}(React.Component);var MessagesTab=/*#__PURE__*/function(_React$Component2){_inherits(MessagesTab,_React$Component2);var _super2=_createSuper(MessagesTab);function MessagesTab(props){var _this2;_classCallCheck(this,MessagesTab);_this2=_super2.call(this,props);_this2.openDialog=function(){_this2.setState(function(state){state.openDialog=true;return state;});};_this2.closeDialog=function(){_this2.setState(function(state){state.openDialog=false;return state;});};_this2.tokenRecieved=function(token){_this2.gotToken(token,_this2.reload);};_this2.getMessages=function(callback){var self=_assertThisInitialized(_this2);chrome.storage.local.get([\"settsData\"],function(res){var r=res;var data=r.settsData!=undefined?r.settsData:{};data.messages=data.messages?data.messages:[];data.messages[self.props.platform]=data.messages[self.props.platform]?data.messages[self.props.platform]:{};try{callback(data.messages[self.props.platform],data);}catch(e){}});};_this2.updateMessages=function(token,toSend,callback){_this2.getMessages(function(platformMsg,setts){platformMsg.groupToken=token;platformMsg.toSend=toSend;setts.messages[_this2.props.platform]=platformMsg;chrome.storage.local.set({settsData:setts},function(){try{callback(platformMsg,setts);}catch(e){}});});};_this2.gotToken=function(token,callback){_this2.getMessages(function(platformMsg,setts){_this2.updateMessages(token,platformMsg.toSend,function(){_this2.setState(function(state){state.gotToken=true;return state;},function(){try{callback();}catch(e){}});});});};_this2.reload=function(){_this2.setState(function(state){state.loaded=false;state.openDialog=false;state.chats=undefined;return state;},function(){_this2.load();});};_this2.load=function(){_this2.getMessages(function(platformMsg,setts){VKMethods.getGroupChats(platformMsg.groupToken,function(result){if(result.error){alert(result);console.log(result);return;}_this2.setState(function(state){state.chats=result.response.items.filter(function(e){return e.conversation.peer.type==\"chat\";}).map(function(e){return{id:e.conversation.peer.id,name:e.chat_settings.title,selected:platformMsg.toSend.includes(e.conversation.peer.id)};});state.loaded=true;return state;},function(){_this2.updateMessages(platformMsg.groupToken,[]);});});});};_this2.toSendChanged=function(chat){chat.selected=!chat.selected;_this2.getMessages(function(platformMsg,setts){_this2.updateMessages(platformMsg.groupToken,_this2.state.chats.filter(function(e){return e.id==chat.id?chat.selected:e.selected;}).map(function(e){return e.id;}),function(){_this2.setState(function(state){state.chats=state.chats.map(function(e){return e.id==chat.id?chat:e;});});});});};_this2.getChatRows=function(){return _this2.state.chats.map(function(e){return/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,e.name),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Switch,{checked:e.selected,color:\"primary\",onChange:_this2.toSendChanged(e)})),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){_this2.getMessages(function(platformMsg){VKMethods.sendMessageToGroupChat(platformMsg.groupToken,e.id,\"Тестовое сообщение\");});}},\"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\")));});};_this2.getChatTable=function(){if(_this2.state.loaded){return/*#__PURE__*/React.createElement(TableContainer,{component:Paper},/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"\\u0427\\u0430\\u0442\"),/*#__PURE__*/React.createElement(TableCell,null,\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},/*#__PURE__*/React.createElement(Button,{onClick:_this2.reload},/*#__PURE__*/React.createElement(RefreshIcon,null))))),/*#__PURE__*/React.createElement(TableBody,null,_this2.getChatRows())));}return/*#__PURE__*/React.createElement(CircularProgress,{style:{padding:20}});};_this2.render=function(){if(_this2.state.gotToken){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(List,null,/*#__PURE__*/React.createElement(ListItem,{button:true,onClick:_this2.openDialog},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(EditIcon,null)),/*#__PURE__*/React.createElement(ListItemText,{primary:_this2.state.groupToken.slice(0,10)+\"...\"}))),/*#__PURE__*/React.createElement(APIKeyDialog,{open:_this2.state.openDialog,onCancel:_this2.closeDialog,onOk:_this2.tokenRecieved}),_this2.getChatTable());}else if(_this2.state.gotToken!=undefined){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(List,null,/*#__PURE__*/React.createElement(ListItem,{button:true,onClick:_this2.openDialog},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(AddIcon,null)),/*#__PURE__*/React.createElement(ListItemText,{primary:\"Укажите API-ключ группы\"}))),/*#__PURE__*/React.createElement(APIKeyDialog,{open:_this2.state.openDialog,onCancel:_this2.closeDialog,onOk:_this2.gotToken}));}return/*#__PURE__*/React.createElement(CircularProgress,{style:{padding:20}});};_this2.state={openDialog:false,gotToken:false,loaded:false};return _this2;}return MessagesTab;}(React.Component);var PostsTab=/*#__PURE__*/function(_React$Component3){_inherits(PostsTab,_React$Component3);var _super3=_createSuper(PostsTab);function PostsTab(){var _this3;_classCallCheck(this,PostsTab);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this3=_super3.call.apply(_super3,[this].concat(args));_this3.render=function(){return/*#__PURE__*/React.createElement(React.Fragment,null,\" Posts \");};return _this3;}return PostsTab;}(React.Component);export{MessagesTab,PostsTab};","map":{"version":3,"sources":["E:/Olympcepy/settings/src/TradeSTabs.js"],"names":["Button","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","List","ListItem","ListItemIcon","ListItemText","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","AddIcon","EditIcon","RefreshIcon","React","VKMethods","Switch","APIKeyDialog","props","onOk","state","key","onCancel","keyChanged","event","currentTarget","newKey","value","setState","render","open","switchDialog","Component","MessagesTab","openDialog","closeDialog","tokenRecieved","token","gotToken","reload","getMessages","callback","self","chrome","storage","local","get","res","r","data","settsData","undefined","messages","platform","e","updateMessages","toSend","platformMsg","setts","groupToken","set","loaded","chats","load","getGroupChats","result","error","alert","console","log","response","items","filter","conversation","peer","type","map","id","name","chat_settings","title","selected","includes","toSendChanged","chat","getChatRows","sendMessageToGroupChat","getChatTable","padding","slice","PostsTab"],"mappings":"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","sourcesContent":["/*global chrome*/\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport React from \"react\";\r\nimport VKMethods from \"./VKMethods\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nclass APIKeyDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { key: \"\" };\r\n    }\r\n\r\n    onOk = () => {\r\n        this.props.onOk(this.state.key);\r\n    };\r\n\r\n    onCancel = () => {\r\n        this.props.onCancel();\r\n    };\r\n\r\n    keyChanged = (event) => {\r\n        if (event.currentTarget) {\r\n            var newKey = event.currentTarget.value;\r\n            this.setState((state) => {\r\n                state.key = newKey;\r\n                return state;\r\n            });\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.switchDialog}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle>Введите API-ключ группы</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Для обеспечения возможности отправки сообщений в чаты\r\n                        необходимо указать API-ключ группы.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"API-ключ группы\"\r\n                        fullWidth\r\n                        onChange={this.keyChanged}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.onCancel} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={this.onOk} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n}\r\n\r\nclass MessagesTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { openDialog: false, gotToken: false, loaded: false };\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState((state) => {\r\n            state.openDialog = true;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    closeDialog = () => {\r\n        this.setState((state) => {\r\n            state.openDialog = false;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    tokenRecieved = (token) => {\r\n        this.gotToken(token, this.reload);\r\n    };\r\n\r\n    getMessages = (callback) => {\r\n        var self = this;\r\n        chrome.storage.local.get([\"settsData\"], (res) => {\r\n            var r = res;\r\n            var data = r.settsData != undefined ? r.settsData : {};\r\n            data.messages = data.messages ? data.messages : [];\r\n            data.messages[self.props.platform] = data.messages[\r\n                self.props.platform\r\n            ]\r\n                ? data.messages[self.props.platform]\r\n                : {};\r\n            try {\r\n                callback(data.messages[self.props.platform], data);\r\n            } catch (e) {}\r\n        });\r\n    };\r\n\r\n    updateMessages = (token, toSend, callback) => {\r\n        this.getMessages((platformMsg, setts) => {\r\n            platformMsg.groupToken = token;\r\n            platformMsg.toSend = toSend;\r\n            setts.messages[this.props.platform] = platformMsg;\r\n            chrome.storage.local.set({ settsData: setts }, () => {\r\n                try {\r\n                    callback(platformMsg, setts);\r\n                } catch (e) {}\r\n            });\r\n        });\r\n    };\r\n\r\n    gotToken = (token, callback) => {\r\n        this.getMessages((platformMsg, setts) => {\r\n            this.updateMessages(token, platformMsg.toSend, () => {\r\n                this.setState(\r\n                    (state) => {\r\n                        state.gotToken = true;\r\n                        return state;\r\n                    },\r\n                    () => {\r\n                        try {\r\n                            callback();\r\n                        } catch (e) {}\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    reload = () => {\r\n        this.setState(\r\n            (state) => {\r\n                state.loaded = false;\r\n                state.openDialog = false;\r\n                state.chats = undefined;\r\n                return state;\r\n            },\r\n            () => {\r\n                this.load();\r\n            }\r\n        );\r\n    };\r\n\r\n    load = () => {\r\n        this.getMessages((platformMsg, setts) => {\r\n            VKMethods.getGroupChats(platformMsg.groupToken, (result) => {\r\n                if (result.error) {\r\n                    alert(result);\r\n                    console.log(result);\r\n                    return;\r\n                }\r\n                this.setState(\r\n                    (state) => {\r\n                        state.chats = result.response.items\r\n                            .filter((e) => {\r\n                                return e.conversation.peer.type == \"chat\";\r\n                            })\r\n                            .map((e) => {\r\n                                return {\r\n                                    id: e.conversation.peer.id,\r\n                                    name: e.chat_settings.title,\r\n                                    selected: platformMsg.toSend.includes(\r\n                                        e.conversation.peer.id\r\n                                    ),\r\n                                };\r\n                            });\r\n                        state.loaded = true;\r\n                        return state;\r\n                    },\r\n                    () => {\r\n                        this.updateMessages(platformMsg.groupToken, []);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    toSendChanged = (chat) => {\r\n        chat.selected = !chat.selected;\r\n        this.getMessages((platformMsg, setts) => {\r\n            this.updateMessages(\r\n                platformMsg.groupToken,\r\n                this.state.chats\r\n                    .filter((e) =>\r\n                        e.id == chat.id ? chat.selected : e.selected\r\n                    )\r\n                    .map((e) => e.id),\r\n                () => {\r\n                    this.setState((state) => {\r\n                        state.chats = state.chats.map((e) => {\r\n                            return e.id == chat.id ? chat : e;\r\n                        });\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    getChatRows = () => {\r\n        return this.state.chats.map((e) => {\r\n            return (\r\n                <TableRow>\r\n                    <TableCell>{e.name}</TableCell>\r\n                    <TableCell>\r\n                        <Switch\r\n                            checked={e.selected}\r\n                            color=\"primary\"\r\n                            onChange={this.toSendChanged(e)}\r\n                        />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button\r\n                            onClick={() => {\r\n                                this.getMessages((platformMsg) => {\r\n                                    VKMethods.sendMessageToGroupChat(\r\n                                        platformMsg.groupToken,\r\n                                        e.id,\r\n                                        \"Тестовое сообщение\"\r\n                                    );\r\n                                });\r\n                            }}\r\n                        >\r\n                            Тестовое сообщение\r\n                        </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            );\r\n        });\r\n    };\r\n\r\n    getChatTable = () => {\r\n        if (this.state.loaded) {\r\n            return (\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Чат</TableCell>\r\n                                <TableCell>Отправка</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={this.reload}>\r\n                                        <RefreshIcon />\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>{this.getChatRows()}</TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            );\r\n        }\r\n        return <CircularProgress style={{ padding: 20 }} />;\r\n    };\r\n\r\n    render = () => {\r\n        if (this.state.gotToken) {\r\n            return (\r\n                <>\r\n                    <List>\r\n                        <ListItem button onClick={this.openDialog}>\r\n                            <ListItemIcon>\r\n                                <EditIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={\r\n                                    this.state.groupToken.slice(0, 10) + \"...\"\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                    <APIKeyDialog\r\n                        open={this.state.openDialog}\r\n                        onCancel={this.closeDialog}\r\n                        onOk={this.tokenRecieved}\r\n                    />\r\n                    {this.getChatTable()}\r\n                </>\r\n            );\r\n        } else if (this.state.gotToken != undefined) {\r\n            return (\r\n                <>\r\n                    <List>\r\n                        <ListItem button onClick={this.openDialog}>\r\n                            <ListItemIcon>\r\n                                <AddIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Укажите API-ключ группы\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                    <APIKeyDialog\r\n                        open={this.state.openDialog}\r\n                        onCancel={this.closeDialog}\r\n                        onOk={this.gotToken}\r\n                    />\r\n                </>\r\n            );\r\n        }\r\n        return <CircularProgress style={{ padding: 20 }} />;\r\n    };\r\n}\r\n\r\nclass PostsTab extends React.Component {\r\n    render = () => {\r\n        return <> Posts </>;\r\n    };\r\n}\r\n\r\nexport { MessagesTab, PostsTab };\r\n"]},"metadata":{},"sourceType":"module"}