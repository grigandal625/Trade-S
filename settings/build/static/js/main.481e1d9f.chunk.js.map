{"version":3,"sources":["VKMethods.js","OlympcepyTabs.js","OlympcepyContent.js","MainPage.js","App.js","serviceWorker.js","index.js"],"names":["VKMethods","executed","callback","event","JSON","parse","target","responseText","e","getGroupChats","groupToken","xhr","XMLHttpRequest","open","onload","send","sendMessageToGroupChat","id","message","encodeURIComponent","getUsersGroups","token","APIKeyDialog","props","onOk","state","key","onCancel","keyChanged","currentTarget","newKey","value","setState","render","Dialog","onClose","switchDialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","DialogActions","Button","onClick","color","React","Component","MessagesTab","openDialog","closeDialog","loadChats","renderedPlatform","platform","load","reload","hasToken","undefined","self","chrome","storage","local","get","res","r","settsData","messages","gotToken","tokenRecieved","t","cb","data","toSend","set","CircularProgress","style","padding","List","ListItem","button","ListItemIcon","ListItemText","primary","slice","tab","ChatSelector","chatsRecieved","result","error","alert","console","log","loaded","chats","response","items","filter","conversation","peer","type","map","name","chat_settings","title","selected","updateChats","c","includes","cs","toSendChanged","chat","getChatRows","TableRow","TableCell","Switch","checked","align","TableContainer","component","Paper","Table","TableHead","TableBody","PostsTab","OlympcepyContent","currentPage","Typography","OPTabs","useState","setValue","Tabs","newValue","tabChanged","Tab","MessagesContent","index","PostsContent","loadGroups","posts","accessToken","registered","register","window","variant","disableElevation","runtime","onMessage","addListener","request","sender","sendResponse","extension","FormatContent","AccountContent","Page","onPanelSwitch","home","AppBar","position","Toolbar","IconButton","edge","aria-label","Avatar","src","cursor","marginLeft","SwipeableDrawer","onOpen","page","OlympcepyPath","Breadcrumbs","Link","PageMenu","openMessages","openPosts","openFormat","openAccount","marginTop","paddingLeft","background","Divider","textAlign","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.481e1d9f.chunk.js","sourcesContent":["class VKMethods {\r\n    static executed = (callback) => (event) => {\r\n        if (callback) {\r\n            try {\r\n                callback(JSON.parse(event.target.responseText));\r\n            } catch (e) {}\r\n        }\r\n    };\r\n\r\n    static getGroupChats = (groupToken, callback) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n            \"GET\",\r\n            `https://api.vk.com/method/messages.getConversations?access_token=${groupToken}&v=5.120`\r\n        );\r\n        xhr.onload = VKMethods.executed(callback);\r\n        xhr.send();\r\n    };\r\n\r\n    static sendMessageToGroupChat = (groupToken, id, message, callback) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n            \"GET\",\r\n            `https://api.vk.com/method/messages.send?peer_id=${id}&message=${encodeURIComponent(\r\n                message\r\n            )}&access_token=${groupToken}&v=5.38`\r\n        );\r\n        xhr.onload = VKMethods.executed(callback);\r\n        xhr.send();\r\n    };\r\n\r\n    static getUsersGroups = (id, token, callback) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n            \"GET\",\r\n            `https://api.vk.com/method/groups.get?user_id=${id}&filter=admin,editor,moder&extended=1&v=5.92&access_token=${token}`\r\n        );\r\n        xhr.onload = VKMethods.executed(callback);\r\n        xhr.send();\r\n    };\r\n}\r\n\r\nexport default VKMethods;\r\n","/*global chrome*/\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport React from \"react\";\r\nimport VKMethods from \"./VKMethods\";\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nclass APIKeyDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { key: \"\" };\r\n    }\r\n\r\n    onOk = () => {\r\n        this.props.onOk(this.state.key);\r\n    };\r\n\r\n    onCancel = () => {\r\n        this.props.onCancel();\r\n    };\r\n\r\n    keyChanged = (event) => {\r\n        if (event.currentTarget) {\r\n            var newKey = event.currentTarget.value;\r\n            this.setState((state) => {\r\n                state.key = newKey;\r\n                return state;\r\n            });\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.switchDialog}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle>Введите API-ключ группы</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Для обеспечения возможности отправки сообщений в чаты\r\n                        необходимо указать API-ключ группы.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"API-ключ группы\"\r\n                        fullWidth\r\n                        onChange={this.keyChanged}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.onCancel} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={this.onOk} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n}\r\n\r\nclass MessagesTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { openDialog: false };\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState((state) => {\r\n            state.openDialog = true;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    closeDialog = () => {\r\n        this.setState((state) => {\r\n            state.openDialog = false;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    loadChats = () => {\r\n        if (this.state.renderedPlatform != this.props.platform) {\r\n            this.load();\r\n        }\r\n    };\r\n\r\n    reload = () => {\r\n        this.setState((state, props) => {\r\n            state.hasToken = undefined;\r\n            state.renderedPlatform = -1;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    load = () => {\r\n        var self = this;\r\n        chrome.storage.local.get([\"settsData\"], (res) => {\r\n            var r = res;\r\n            if (\r\n                r.settsData != undefined &&\r\n                r.settsData.messages &&\r\n                r.settsData.messages[this.props.platform] &&\r\n                r.settsData.messages[this.props.platform].groupToken\r\n            ) {\r\n                self.gotToken(\r\n                    r.settsData.messages[this.props.platform].groupToken\r\n                );\r\n            } else {\r\n                self.setState((state, props) => {\r\n                    state.settsData = r.settsData;\r\n                    state.renderedPlatform = props.platform;\r\n                    state.hasToken = false;\r\n                    state.groupToken = undefined;\r\n                    return state;\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    tokenRecieved = (token) => {\r\n        this.gotToken(token, this.reload);\r\n    };\r\n\r\n    gotToken = (token, callback) => {\r\n        var self = this;\r\n        var t = token;\r\n        var cb = callback;\r\n        chrome.storage.local.get([\"settsData\"], (res) => {\r\n            var r = res;\r\n            var data = r.settsData != undefined ? r.settsData : {};\r\n            data.messages = data.messages ? data.messages : [];\r\n            data.messages[self.props.platform] = data.messages[\r\n                self.props.platform\r\n            ]\r\n                ? data.messages[self.props.platform]\r\n                : {};\r\n            data.messages[self.props.platform].groupToken = t;\r\n            data.messages[self.props.platform].toSend = data.messages[\r\n                self.props.platform\r\n            ].toSend\r\n                ? data.messages[self.props.platform].toSend\r\n                : [];\r\n            chrome.storage.local.set({ settsData: data }, () => {\r\n                self.setState(\r\n                    (state, props) => {\r\n                        state.settsData = r.settsData;\r\n                        state.renderedPlatform = props.platform;\r\n                        state.hasToken = true;\r\n                        state.groupToken = t;\r\n                        state.openDialog = false;\r\n                        return state;\r\n                    },\r\n                    () => {\r\n                        try {\r\n                            cb();\r\n                        } catch (e) {}\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        this.loadChats();\r\n        if (this.state.hasToken == undefined) {\r\n            return <CircularProgress style={{ padding: 20 }} />;\r\n        } else if (this.state.hasToken) {\r\n            return (\r\n                <>\r\n                    <List>\r\n                        <ListItem button onClick={this.openDialog}>\r\n                            <ListItemIcon>\r\n                                <EditIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={\r\n                                    this.state.groupToken.slice(0, 10) + \"...\"\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                    <APIKeyDialog\r\n                        open={this.state.openDialog}\r\n                        onCancel={this.closeDialog}\r\n                        onOk={this.tokenRecieved}\r\n                    />\r\n                    <ChatSelector\r\n                        platform={this.props.platform}\r\n                        token={this.state.groupToken}\r\n                        data={this.state.settsData}\r\n                        tab={this}\r\n                    />\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    <List>\r\n                        <ListItem button onClick={this.openDialog}>\r\n                            <ListItemIcon>\r\n                                <AddIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Укажите API-ключ группы\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                    <APIKeyDialog\r\n                        open={this.state.openDialog}\r\n                        onCancel={this.closeDialog}\r\n                        onOk={this.gotToken}\r\n                    />\r\n                </>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nclass ChatSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loaded: false, renderedPlatform: props.platform };\r\n        this.loadChats();\r\n    }\r\n\r\n    loadChats = () => {\r\n        if (this.props.platform != -1) {\r\n            VKMethods.getGroupChats(this.props.token, this.chatsRecieved);\r\n        }\r\n    };\r\n\r\n    chatsRecieved = (result) => {\r\n        if (result.error) {\r\n            alert(result);\r\n            console.log(result);\r\n            this.setState((state) => {\r\n                state.loaded = false;\r\n                return state;\r\n            });\r\n            return;\r\n        }\r\n        var chats = result.response.items\r\n            .filter((e) => e.conversation.peer.type == \"chat\")\r\n            .map((e) => {\r\n                return {\r\n                    name: e.conversation.chat_settings.title,\r\n                    id: e.conversation.peer.id,\r\n                };\r\n            });\r\n        var self = this;\r\n        chrome.storage.local.get([\"settsData\"], (res) => {\r\n            var r = res;\r\n            var data = r.settsData ? r.settsData : {};\r\n            data.messages = data.messages ? data.messages : [];\r\n\r\n            data.messages[self.props.platform] = data.messages[\r\n                self.props.platform\r\n            ]\r\n                ? data.messages[self.props.platform]\r\n                : {};\r\n\r\n            data.messages[self.props.platform].toSend = data.messages[\r\n                self.props.platform\r\n            ].toSend\r\n                ? data.messages[self.props.platform].toSend\r\n                : [];\r\n\r\n            var selected = data.messages[self.props.platform].toSend;\r\n            self.updateChats(\r\n                chats.map((c) => {\r\n                    c.selected = selected.includes(c.id);\r\n                    return c;\r\n                })\r\n            );\r\n        });\r\n    };\r\n\r\n    updateChats = (cs) => {\r\n        var chats = cs;\r\n        var self = this;\r\n        chrome.storage.local.get([\"settsData\"], (res) => {\r\n            var r = res;\r\n            var data = r.settsData ? r.settsData : {};\r\n            data.messages = data.messages ? data.messages : [];\r\n\r\n            data.messages[self.props.platform] = data.messages[\r\n                self.props.platform\r\n            ]\r\n                ? data.messages[self.props.platform]\r\n                : {};\r\n\r\n            data.messages[self.props.platform].toSend = chats\r\n                .filter((e) => e.selected)\r\n                .map((e) => e.id);\r\n\r\n            chrome.storage.local.set({ settsData: data }, () => {\r\n                self.setState((state, props) => {\r\n                    state.renderedPlatform = props.platform;\r\n                    state.loaded = true;\r\n                    state.chats = chats;\r\n                    return state;\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    toSendChanged = (c) => (event) => {\r\n        var chat = c;\r\n        this.updateChats(\r\n            this.state.chats.map((e) => {\r\n                e.selected = e.id != chat.id ? e.selected : !chat.selected;\r\n                return e;\r\n            })\r\n        );\r\n    };\r\n\r\n    getChatRows = () => {\r\n        return this.state.chats.map((e) => {\r\n            return (\r\n                <TableRow>\r\n                    <TableCell>{e.name}</TableCell>\r\n                    <TableCell>\r\n                        <Switch\r\n                            checked={e.selected}\r\n                            color=\"primary\"\r\n                            onChange={this.toSendChanged(e)}\r\n                        />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button\r\n                            onClick={() => {\r\n                                console.log('sending')\r\n                                VKMethods.sendMessageToGroupChat(\r\n                                    this.props.token,\r\n                                    e.id,\r\n                                    \"Тестовое сообщение\"\r\n                                );\r\n                            }}\r\n                        >\r\n                            Тестовое сообщение\r\n                        </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            );\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        if (this.state.renderedPlatform != this.props.platform) {\r\n            this.props.tab.reload();\r\n        }\r\n        if (this.state.loaded) {\r\n            return (\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Чат</TableCell>\r\n                                <TableCell>Отправка</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={this.props.tab.reload}>\r\n                                        <RefreshIcon />\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.getChatRows(this.state.chats)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            );\r\n        } else {\r\n            return <CircularProgress style={{ padding: 20 }} />;\r\n        }\r\n    };\r\n}\r\n\r\nclass PostsTab extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loaded: false, renderedPlatform: props.platform };\r\n        this.loadChats();\r\n    }\r\n\r\n    render = () => {\r\n        return <>{this.props.platform}</>\r\n    }\r\n}\r\n\r\nexport {MessagesTab, PostsTab};\r\n","/*global chrome*/\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {MessagesTab, PostsTab} from \"./OlympcepyTabs\";\r\n\r\nclass OlympcepyContent extends React.Component {\r\n    render = () => {\r\n        switch (this.props.currentPage) {\r\n            case 0:\r\n                return <MessagesContent />;\r\n            case 1:\r\n                return <PostsContent />;\r\n            case 2:\r\n                return <FormatContent />;\r\n            case 3:\r\n                return <AccountContent />;\r\n            default:\r\n                return <Typography>Default page</Typography>;\r\n        }\r\n    };\r\n}\r\n\r\nfunction OPTabs(props) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        props.tabChanged(newValue);\r\n    };\r\n    return (\r\n        <Paper>\r\n            <Tabs value={value} onChange={handleChange}>\r\n                <Tab label=\"Olymp Trade\" />\r\n                <Tab label=\"Pocket Option\" />\r\n            </Tabs>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nclass MessagesContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { index: 0 };\r\n    }\r\n\r\n    tabChanged = (index) => {\r\n        this.setState((state) => {\r\n            state.index = index;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <OPTabs tabChanged={this.tabChanged} />\r\n                <MessagesTab platform={this.state.index} />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nclass PostsContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { registered: false };\r\n        var self = this;\r\n        chrome.runtime.onMessage.addListener(\r\n            (request, sender, sendResponse) => {\r\n            if (request.accessToken && request.extension == \"Olympcepy\") {\r\n                sendResponse({});\r\n                self.loadGroups();\r\n            }\r\n        })\r\n    }\r\n\r\n    loadGroups = () => {\r\n        chrome.storage.local.get(['settsData'], (res)=>{\r\n            var r = res;\r\n            if (r.settsData.posts && r.settsData.posts.accessToken){\r\n                this.setState((state) => {\r\n                    state.registered = true;\r\n                    state.token = r.settsData.posts.accessToken;\r\n                    return state;\r\n                });\r\n            } else {\r\n                this.setState((state) => {\r\n                    state.registered = false;\r\n                    state.token = undefined;\r\n                    return state;\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    register = () => {\r\n        chrome.storage.local.set({ \"CepVkLogin\": true }, () => {\r\n            window.open(\r\n                \"https://oauth.vk.com/authorize?client_id=6290333&scope=wall,offline&redirect_uri=http://oauth.vk.com/blank.html&response_type=token&v=5.92\"\r\n            );\r\n        });\r\n    };\r\n\r\n    tabChanged = (index) => {\r\n        this.setState((state) => {\r\n            state.index = index;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        if (!this.state.registered) {\r\n            return (\r\n                <>\r\n                <Paper style={{padding: 10}}>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation onClick={this.register}>Привязать аккаунт вконтакте</Button>\r\n                </Paper>\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                <Paper style={{padding: 10}}>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation onClick={this.register}>Привязать другой аккаунт вконтакте</Button>\r\n                </Paper>\r\n                <OPTabs tabChanged={this.tabChanged} />\r\n                <PostsTab platform={this.state.index} />\r\n                </>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nclass FormatContent extends React.Component {\r\n    render = () => {\r\n        return <>format</>;\r\n    };\r\n}\r\n\r\nclass AccountContent extends React.Component {\r\n    render = () => {\r\n        return <>account</>;\r\n    };\r\n}\r\n\r\nexport default OlympcepyContent;\r\n","import React from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport WallpaperIcon from \"@material-ui/icons/Wallpaper\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport OlympcepyContent from \"./OlympcepyContent\";\r\n\r\nclass Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: false, currentPage: 4 };\r\n    }\r\n\r\n    onPanelSwitch = (open) => (event) => {\r\n        if (open === null) {\r\n            open = !this.state.open;\r\n        }\r\n        if (\r\n            event &&\r\n            event.type === \"keydown\" &&\r\n            (event.key === \"Tab\" || event.key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n        this.setState((state) => {\r\n            state.open = open;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    home = () => {\r\n        this.setState((state) => {\r\n            state.currentPage = 4;\r\n            return state;\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            onClick={this.onPanelSwitch(true)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Avatar src=\"icon_128.png\" style={{cursor: 'pointer'}} onClick={this.home}/>\r\n                        <Typography style={{cursor: 'pointer', marginLeft: 10}} onClick={this.home} variant=\"h6\">Olympcepy</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <SwipeableDrawer\r\n                    open={this.state.open}\r\n                    onOpen={this.onPanelSwitch(true)}\r\n                    onClose={this.onPanelSwitch(false)}\r\n                >\r\n                    <PageMenu page={this} />\r\n                </SwipeableDrawer>\r\n                <OlympcepyPath\r\n                    currentPage={this.state.currentPage}\r\n                    page={this}\r\n                />\r\n                <OlympcepyContent currentPage={this.state.currentPage} />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nclass OlympcepyPath extends React.Component {\r\n\r\n    home = () => {\r\n        this.props.page.setState((state) => {\r\n            state.currentPage = 4;\r\n            return state;\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Breadcrumbs style={{padding: 20}} aria-label=\"breadcrumb\">\r\n                <Link style={{cursor: 'pointer'}} onClick={this.home}>Olympcepy</Link>\r\n                <Typography style={{cursor: 'default'}}>\r\n                    {\r\n                        [\r\n                            \"Сообщения в чатах группы\",\r\n                            \"Пост на стене группы\",\r\n                            \"Формат сигналов\",\r\n                            \"Дополнительно\",\r\n                            \"\",\r\n                        ][this.props.currentPage]\r\n                    }\r\n                </Typography>\r\n            </Breadcrumbs>\r\n        );\r\n    };\r\n}\r\n\r\nclass PageMenu extends React.Component {\r\n    openMessages = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 0;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    openPosts = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 1;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    openFormat = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 2;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    openAccount = () => {\r\n        this.props.page.setState((state) => {\r\n            state.open = false;\r\n            state.currentPage = 3;\r\n            return state;\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <List style={{ marginTop: -8 }}>\r\n                    <ListItem\r\n                        style={{\r\n                            padding: 16,\r\n                            paddingLeft: 25,\r\n                            background: \"#3f51b5\",\r\n                            color: \"white\",\r\n                        }}\r\n                        button\r\n                        key={\"Меню настроек\"}\r\n                        onClick={this.props.page.onPanelSwitch(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ArrowBackIcon style={{ color: \"white\" }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            style={{ marginLeft: -20 }}\r\n                            primary={\"Меню настроек\"}\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <label style={{ textAlign: \"center\" }}>\r\n                    Отправка сигналов в ВК\r\n                </label>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openMessages}\r\n                        key={\"Сообщения в чатах группы\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <EmailIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Сообщения в чатах группы\"} />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openPosts}\r\n                        key={\"Пост на стене группы\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <WallpaperIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Пост на стене группы\"} />\r\n                    </ListItem>\r\n                </List>\r\n\r\n                <Divider />\r\n                <label style={{ textAlign: \"center\" }}>Другие настройки</label>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openFormat}\r\n                        key={\"Формат сигналов\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <RadioButtonCheckedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Формат сигналов\"} />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        onClick={this.openAccount}\r\n                        key={\"Дополнительно\"}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <AccountBoxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Дополнительно\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\nimport Page from './MainPage'\n\nfunction App() {\n  return (\n    <Page/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}